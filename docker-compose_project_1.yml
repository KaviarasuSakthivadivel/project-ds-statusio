version: '2'

services:
    app:
        image: 'incident-tracker:latest'
        build:
            context: ./incident-tracker
            dockerfile: Dockerfile
        container_name: incident-tracker
        depends_on:
            - db
            - redis
        links:
            - redis
        environment:
              - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
              - SPRING_DATASOURCE_USERNAME=postgres
              - SPRING_DATASOURCE_PASSWORD=admin
              - SPRING_JPA_HIBERNATE_DDL_AUTO=update
              - SPRING_REDIS_HOST=redis
        volumes:
            - /Users/kaviarasu/DockerData:/app
        ports:
            - "8080:8080"
        networks:
            - status-io-network

    event-broker:
        image: 'event-broker:latest'
        build:
            context: ./event-broker
            dockerfile: Dockerfile
        container_name: status-io-broker-a
        depends_on:
            - db
            - redis
        links:
            - redis
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
            - SPRING_DATASOURCE_USERNAME=postgres
            - SPRING_DATASOURCE_PASSWORD=admin
            - SPRING_JPA_HIBERNATE_DDL_AUTO=update
            - SPRING_REDIS_HOST=redis
        volumes:
            - /Users/kaviarasu/DockerData:/broker
        ports:
            - "8081:8081"
        networks:
            - status-io-network

    event-broker-b:
        image: 'event-broker-b:latest'
        build:
            context: ./event-broker-b
            dockerfile: Dockerfile
        container_name: status-io-broker-b
        depends_on:
            - db
            - redis
        links:
            - redis
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
            - SPRING_DATASOURCE_USERNAME=postgres
            - SPRING_DATASOURCE_PASSWORD=admin
            - SPRING_JPA_HIBERNATE_DDL_AUTO=update
            - SPRING_REDIS_HOST=redis
        volumes:
            - /Users/kaviarasu/DockerData:/brokerb
        ports:
            - "8084:8084"
        networks:
            - status-io-network

    event-broker-c:
        image: 'event-broker-c:latest'
        build:
            context: ./event-broker-c
            dockerfile: Dockerfile
        container_name: status-io-broker-c
        depends_on:
            - db
            - redis
        links:
            - redis
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
            - SPRING_DATASOURCE_USERNAME=postgres
            - SPRING_DATASOURCE_PASSWORD=admin
            - SPRING_JPA_HIBERNATE_DDL_AUTO=update
            - SPRING_REDIS_HOST=redis
        volumes:
            - /Users/kaviarasu/DockerData:/brokerc
        ports:
            - "8085:8085"
        networks:
            - status-io-network

    message-producer:
        image: 'message-producer:latest'
        build:
            context: ./message-producer
            dockerfile: Dockerfile
        container_name: status-io-producer
        environment:
            - SPRING_REDIS_HOST=redis
        depends_on:
            - event-broker
            - app
            - redis
        links:
            - redis
        networks:
            - status-io-network
        volumes:
            - /Users/kaviarasu/DockerData:/producer
        ports:
            - "8082:8082"

    message-consumer:
        image: 'message-consumer:latest'
        container_name: message-consumer
        build:
            context: ./message-consumer
            dockerfile: Dockerfile
        links:
            - redis
        depends_on:
            - event-broker
            - app
            - redis
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
            - SPRING_DATASOURCE_USERNAME=postgres
            - SPRING_DATASOURCE_PASSWORD=admin
            - SPRING_JPA_HIBERNATE_DDL_AUTO=update
            - SPRING_REDIS_HOST=redis
        networks:
            - status-io-network
        volumes:
            - /Users/kaviarasu/DockerData:/consumer
        ports:
            - "8083:8083"

    db:
        image: 'postgres:13.1-alpine'
        container_name: status-io-db
        environment:
              - POSTGRES_USER=postgres
              - POSTGRES_PASSWORD=admin
        ports:
            - "5432:5432"
        networks:
            - status-io-network

    nginx:
        build:
            context : ./nginx
            dockerfile: Dockerfile
        depends_on:
            - message-consumer
            - event-broker
        ports:
            - "4000:4000"
        networks:
            - status-io-network

    redis:
        image: redis
        container_name: redis-service
        ports:
            - "6379:6379"
        hostname: redis
        networks:
            - status-io-network

networks:
    status-io-network:
        driver: bridge
