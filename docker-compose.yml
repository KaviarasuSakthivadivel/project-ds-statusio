version: '2'

services:
    zookeeper-1:
        image: confluentinc/cp-zookeeper:latest
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 22181:2181
        networks:
            - status-io-network

    zookeeper-2:
        image: confluentinc/cp-zookeeper:latest
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 32181:2181

    zookeeper-3:
        image: confluentinc/cp-zookeeper:latest
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 42181:2181

    kafka-1:
        image: confluentinc/cp-kafka:latest
        depends_on:
            - zookeeper-1
            - zookeeper-2
            - zookeeper-3
        ports:
            - 29092:29092
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        networks:
            - status-io-network

    kafka-2:
        image: confluentinc/cp-kafka:latest
        depends_on:
            - zookeeper-1
            - zookeeper-2
            - zookeeper-3
        ports:
            - 39092:39092
        environment:
            KAFKA_BROKER_ID: 2
            KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    kafka-3:
        image: confluentinc/cp-kafka:latest
        depends_on:
            - zookeeper-1
            - zookeeper-2
            - zookeeper-3
        ports:
            - 49092:49092
        environment:
            KAFKA_BROKER_ID: 3
            KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181,
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092,PLAINTEXT_HOST://localhost:49092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    app:
        image: 'incident-tracker:latest'
        build:
            context: ./incident-tracker
            dockerfile: Dockerfile
        container_name: incident-tracker
        depends_on:
            - db
            - redis
            - kafka-1
            - kafka-2
        links:
            - redis
        environment:
              - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
              - SPRING_DATASOURCE_USERNAME=postgres
              - SPRING_DATASOURCE_PASSWORD=admin
              - SPRING_JPA_HIBERNATE_DDL_AUTO=update
              - SPRING_REDIS_HOST=redis
        volumes:
            - /Users/kaviarasu/DockerData:/app
        ports:
            - "8080:8080"
        networks:
            - status-io-network

    db:
        image: 'postgres:13.1-alpine'
        container_name: status-io-db
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=admin
        ports:
            - "5432:5432"
        networks:
            - status-io-network

    redis:
        image: redis
        container_name: redis-service
        ports:
            - "6379:6379"
        hostname: redis
        networks:
            - status-io-network

    event-broker:
        image: 'event-broker:latest'
        build:
            context: ./event-broker
            dockerfile: Dockerfile
        container_name: status-io-subscriber-manager
        depends_on:
            - db
            - redis
        links:
            - redis
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
            - SPRING_DATASOURCE_USERNAME=postgres
            - SPRING_DATASOURCE_PASSWORD=admin
            - SPRING_JPA_HIBERNATE_DDL_AUTO=update
            - SPRING_REDIS_HOST=redis
        volumes:
            - /Users/kaviarasu/DockerData:/broker
        ports:
            - "8081:8081"
        networks:
            - status-io-network

    message-consumer:
        image: 'message-consumer:latest'
        container_name: message-consumer
        build:
            context: ./message-consumer
            dockerfile: Dockerfile
        links:
            - redis
        depends_on:
            - app
            - redis
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
            - SPRING_DATASOURCE_USERNAME=postgres
            - SPRING_DATASOURCE_PASSWORD=admin
            - SPRING_JPA_HIBERNATE_DDL_AUTO=update
            - SPRING_REDIS_HOST=redis
        networks:
            - status-io-network
        volumes:
            - /Users/kaviarasu/DockerData:/consumer
        ports:
            - "8083:8083"

networks:
    status-io-network:
        driver: bridge
